import{_ as t,o as d,c as r,e}from"./app-66d6b4fd.js";const a={},o=e('<h1 id="kayson-后台管理系统" tabindex="-1"><a class="header-anchor" href="#kayson-后台管理系统" aria-hidden="true">#</a> Kayson 后台管理系统</h1><h3 id="项目简介" tabindex="-1"><a class="header-anchor" href="#项目简介" aria-hidden="true">#</a> 项目简介</h3><p>一个基于 Spring Boot 多模块架构、Spring Security、MySQL + MyBatis Plus、Redis 的前后端分离后台管理系统，支持RBAC动态权限、数据权限、SaaS多租户等功能。</p><h3 id="项目结构" tabindex="-1"><a class="header-anchor" href="#项目结构" aria-hidden="true">#</a> 项目结构</h3><table><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td><code>kayson-dependencies</code></td><td>Maven 依赖版本管理</td></tr><tr><td><code>kayson-framework</code></td><td>Java 框架拓展</td></tr><tr><td><code>kayson-server</code></td><td>管理后台 服务端</td></tr><tr><td><code>kayson-module-system</code></td><td>系统功能的 Module 模块</td></tr><tr><td><code>kayson-module-infra</code></td><td>基础设施的 Module 模块</td></tr></tbody></table><h3 id="系统功能" tabindex="-1"><a class="header-anchor" href="#系统功能" aria-hidden="true">#</a> 系统功能</h3><table><thead><tr><th>功能</th><th>描述</th></tr></thead><tbody><tr><td>用户管理</td><td>用户是系统操作者，该功能主要完成系统用户配置</td></tr><tr><td>在线用户</td><td>当前系统中活跃用户状态监控，支持手动踢下线</td></tr><tr><td>角色管理</td><td>角色菜单权限分配、设置角色按机构进行数据范围权限划分</td></tr><tr><td>菜单管理</td><td>配置系统菜单、操作权限、按钮权限标识等，本地缓存提供性能</td></tr><tr><td>部门管理</td><td>配置系统组织机构（公司、部门、小组），树结构展现支持数据权限</td></tr><tr><td>岗位管理</td><td>配置系统用户所属担任职务</td></tr><tr><td>租户管理</td><td>配置系统租户，支持 SaaS 场景下的多租户功能</td></tr><tr><td>租户套餐</td><td>配置租户套餐，自定每个租户的菜单、操作、按钮的权限</td></tr><tr><td>字典管理</td><td>对系统中经常使用的一些较为固定的数据进行维护</td></tr><tr><td>短信管理</td><td><strong>TODO</strong>：短信渠道、短息模板、短信日志，对接阿里云、腾讯云等主流短信平台</td></tr><tr><td>邮件管理</td><td><strong>TODO</strong>：邮箱账号、邮件模版、邮件发送日志，支持所有邮件平台</td></tr><tr><td>站内信</td><td><strong>TODO</strong>：系统内的消息通知，提供站内信模版、站内信消息</td></tr><tr><td>操作日志</td><td>系统正常操作日志记录和查询，集成 Swagger 生成日志内容</td></tr><tr><td>登录日志</td><td>系统登录日志记录查询，包含登录异常</td></tr><tr><td>应用管理</td><td><strong>TODO</strong>: 管理 SSO 单点登录的应用，支持多种 OAuth2 授权方式</td></tr></tbody></table><h3 id="基础设施" tabindex="-1"><a class="header-anchor" href="#基础设施" aria-hidden="true">#</a> 基础设施</h3><table><thead><tr><th>描述</th><th></th></tr></thead><tbody><tr><td>代码生成</td><td><strong>TODO</strong>：前后端代码的生成（Java、Vue、SQL、单元测试），支持 CRUD 下载</td></tr><tr><td>系统接口</td><td>基于 Swagger 自动生成相关的 RESTful API 接口文档</td></tr><tr><td>数据库文档</td><td><strong>TODO</strong>：基于 Screw 自动生成数据库文档，支持导出 Word、HTML、MD 格式</td></tr><tr><td>配置管理</td><td><strong>TODO</strong>：对系统动态配置常用参数，支持 SpringBoot 加载</td></tr><tr><td>定时任务</td><td>在线（添加、修改、删除)任务调度包含执行结果日志</td></tr><tr><td>文件服务</td><td>支持将文件存储到 S3（MinIO、阿里云、腾讯云、七牛云）、数据库等</td></tr><tr><td>API 日志</td><td>包括 RESTful API 访问日志、异常日志两部分，方便排查 API 相关的问题</td></tr><tr><td>MySQL 监控</td><td>监视当前系统数据库连接池状态，可进行分析SQL找出系统性能瓶颈</td></tr><tr><td>Redis 监控</td><td>监控 Redis 数据库的使用情况，使用的 Redis Key 管理</td></tr><tr><td>消息队列</td><td>基于 Redis 实现消息队列，(<strong>TODO</strong>：Stream 提供集群消费)，Pub/Sub 提供广播消费</td></tr><tr><td>Java 监控</td><td>基于 Spring Boot Admin 实现 Java 应用的监控</td></tr><tr><td>链路追踪</td><td><strong>TODO</strong>: 接入 SkyWalking 组件，实现链路追踪</td></tr><tr><td>日志中心</td><td><strong>TODO</strong>: 接入 SkyWalking 组件，实现日志中心</td></tr><tr><td>幂等组件</td><td>基于 Redis 实现幂等组件，解决重复请求问题</td></tr><tr><td>服务保障</td><td><strong>TODO</strong>: 基于 Resilience4j 实现服务的稳定性，包括限流、熔断等功能</td></tr><tr><td>日志服务</td><td>轻量级日志中心，查看远程服务器的日志</td></tr><tr><td>单元测试</td><td>基于 JUnit + Mockito 实现单元测试，保证功能的正确性、代码的质量等</td></tr></tbody></table>',9),n=[o];function s(h,i){return d(),r("div",null,n)}const g=t(a,[["render",s],["__file","index.html.vue"]]);export{g as default};
