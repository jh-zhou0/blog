import{_ as o,r as p,o as i,c as l,a as n,d as s,b as e,e as t}from"./app-66d6b4fd.js";const c={},r=t('<h1 id="数据权限" tabindex="-1"><a class="header-anchor" href="#数据权限" aria-hidden="true">#</a> 数据权限</h1><p>数据权限，实现指定用户可以操作<strong>指定范围</strong>的数据。例如说，针对员工信息的数据权限：</p><table><thead><tr><th>用户</th><th>数据范围</th></tr></thead><tbody><tr><td>普通员工</td><td>自己</td></tr><tr><td>部门领导</td><td>所属部门的所有员工</td></tr><tr><td>HR 小姐姐</td><td>整个公司的所有员工</td></tr></tbody></table><p>上述的这个示例，使用硬编码是可以实现的，并且也非常简单。但是，在业务快速迭代的过程中，类似这种数据需求会越来越多，如果全部采用硬编码的方式，无疑会给我们带来非常大的开发与维护成本。</p>',4),u={href:"https://gitee.com/jhzhou/kayson/tree/master/kayson-framework/kayson-spring-boot-starter-biz-data-permission",target:"_blank",rel:"noopener noreferrer"},d=t('<div class="custom-container tip"><p class="custom-container-title">友情提示：数据权限是否支持指定用户只能查看数据的某些字段？</p><p>不支持。权限可以分成三类：功能权限、数据权限、字段权限。</p><p>字段权限的控制，不属于数据权限，而是属于字段权限，会在未来提供，敬请期待。</p></div><h2 id="_1-实现原理" tabindex="-1"><a class="header-anchor" href="#_1-实现原理" aria-hidden="true">#</a> 1.实现原理</h2><p><code>kayson-spring-boot-starter-biz-data-permission</code> 技术组件的实现原理非常简单，每次对数据库操作时，<strong>自动</strong>拼接 <code>WHERE data_column = ?</code> 条件来进行数据的过滤。</p><p>例如说，查看员工信息的功能，对应 SQL 是 <code>SELECT * FROM system_users</code>，那么拼接后的 SQL 结果会是：</p><table><thead><tr><th>用户</th><th>数据范围</th><th>SQL</th></tr></thead><tbody><tr><td>普通员工</td><td>自己</td><td><code>SELECT * FROM system_users WHERE id = 自己</code></td></tr><tr><td>部门领导</td><td>所属部门的所有员工</td><td><code>SELECT * FROM system_users WHERE dept_id = 自己的部门</code></td></tr><tr><td>HR 小姐姐</td><td>整个公司的所有员工</td><td><code>SELECT * FROM system_users</code> <strong>无需拼接</strong></td></tr></tbody></table>',5),k={href:"https://gitee.com/jhzhou/kayson/blob/master/kayson-framework/kayson-spring-boot-starter-biz-data-permission/src/main/java/cn/zjh/kayson/framework/datapermission/core/db/DataPermissionDatabaseInterceptor.java",target:"_blank",rel:"noopener noreferrer"},m=t('<ul><li><code>#processSelect(...)</code> 方法：处理 SELECT 语句的 WHERE 条件。</li><li><code>#processUpdate(...)</code> 方法：处理 UPDATE 语句的 WHERE 条件。</li><li><code>#processDelete(...)</code> 方法：处理 DELETE 语句的 WHERE 条件。</li></ul><h2 id="_2-如何实现数据权限-内核" tabindex="-1"><a class="header-anchor" href="#_2-如何实现数据权限-内核" aria-hidden="true">#</a> 2.如何实现数据权限（内核）</h2><h3 id="_2-1原理剖析" tabindex="-1"><a class="header-anchor" href="#_2-1原理剖析" aria-hidden="true">#</a> 2.1原理剖析</h3><p>方案一：基于【硬编码 WHERE 条件】的方式</p><p>优点：实现简单</p><p>缺点：可复用性差</p><p>方案二：基于【SQL 重写】+【数据规则生成 WHERE 条件】的方式，解决可复用性差的问题</p><h3 id="_2-2源码实现-mybatis-如何重写-sql" tabindex="-1"><a class="header-anchor" href="#_2-2源码实现-mybatis-如何重写-sql" aria-hidden="true">#</a> 2.2源码实现：MyBatis 如何重写 SQL？</h3><h4 id="重写-sql" tabindex="-1"><a class="header-anchor" href="#重写-sql" aria-hidden="true">#</a> 重写 SQL</h4><p><strong>目的</strong>：拼接 WHERE 数据条件 原 SQL：SELECT * FROM t_user 新 SQL：SELECT * FROM t_user WHERE dept_id = ?</p><p><strong>方案一</strong>：基于 MyBatis 插件机制</p><p>1、Mybatis四大对象：</p><ul><li>Executor 执行器</li><li>StatementHandler 【SQL 语句】处理器</li><li>ParameterHandler 【参数】处理器</li><li>ResultSetHandler 【结果】处理器</li></ul><p>2、使用方式：实现 MyBatis Interceptor 接口，并添加 @Intercepts + @Signature 注解，具体可参考https://www.cnblogs.com/xrq730/p/6972268.html</p><p>3、缺点：使用麻烦！需要一些 MyBatis 源码 知识。</p><p><strong>方案二</strong>：基于 MyBatis Plus 插件机制</p><p>1、优点：简化 MyBatis 插件机制的使用！</p><p>2、使用方式：实现 MyBatis Plus 的 InnerInterceptor 接口</p><p>3、MybatisPlusInterceptor（实现了 MyBatis Interceptor 接口 ）</p><h4 id="解析-sql" tabindex="-1"><a class="header-anchor" href="#解析-sql" aria-hidden="true">#</a> 解析 SQL</h4><p><strong>目的</strong>：根据 Table 拼接不同的数据条件 t_user 表：WHERE dept_id = ? t_order 表：WHERE group_id = ?</p><p><strong>方案一</strong>：基于 Druid 解析，优点：功能性更强</p><p><strong>方案二</strong>：基于 JSqlParser 解析，优点：易用性更好</p><h4 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h4><ol><li>实现 MyBatis Plus 的 InnerInterceptor 接口，实现 SQL 的重写</li><li>继承 MyBatis Plus 的 JsqlParserSupport 抽象类（基于 JSqlParser 解析），实现 SQL 的解析</li></ol>',25),v={href:"https://gitee.com/jhzhou/kayson/blob/master/kayson-framework/kayson-spring-boot-starter-biz-data-permission/src/main/java/cn/zjh/kayson/framework/datapermission/core/db/DataPermissionDatabaseInterceptor.java",target:"_blank",rel:"noopener noreferrer"},b=t(`<h3 id="_2-3源码实现-如何基于【数据规则】生成-where-条件" tabindex="-1"><a class="header-anchor" href="#_2-3源码实现-如何基于【数据规则】生成-where-条件" aria-hidden="true">#</a> 2.3源码实现：如何基于【数据规则】生成 WHERE 条件？</h3><h4 id="_2-3-1datapermissionrule-接口" tabindex="-1"><a class="header-anchor" href="#_2-3-1datapermissionrule-接口" aria-hidden="true">#</a> 2.3.1DataPermissionRule 接口</h4><p>定义：数据权限规则接口</p><p>作用：</p><ul><li>getTableNames：定义每个表的数据权限</li><li>getExpression：生成对应的 WHERE 数据权限条件</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 数据权限规则接口
 * 
 * <span class="token keyword">@author</span> zjh - kayson
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DataPermissionRule</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 返回需要生效的表名数组
     * 为什么需要该方法？Data Permission 数组基于 SQL 重写，通过 Where 返回只有权限的数据
     *
     * 如果需要基于实体名获得表名，可调用 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">TableInfoHelper</span><span class="token punctuation">#</span><span class="token function">getTableInfo</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> 获得
     *
     * <span class="token keyword">@return</span> 表名数组
     */</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getTableNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 根据表名和别名，生成对应的 WHERE / OR 过滤条件
     *
     * <span class="token keyword">@param</span> <span class="token parameter">tableName</span> 表名
     * <span class="token keyword">@param</span> <span class="token parameter">tableAlias</span> 别名，可能为空
     * <span class="token keyword">@return</span> 过滤条件 Expression 表达式
     */</span>
    <span class="token class-name">Expression</span> <span class="token function">getExpression</span><span class="token punctuation">(</span><span class="token class-name">String</span> tableName<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Alias</span> tableAlias<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-2datapermissionrulefactory" tabindex="-1"><a class="header-anchor" href="#_2-3-2datapermissionrulefactory" aria-hidden="true">#</a> 2.3.2DataPermissionRuleFactory</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">DataPermissionRule</span></span><span class="token punctuation">}</span> 工厂接口，作为容器，提供管理能力
 * 
 * <span class="token keyword">@author</span> zjh - kayson
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DataPermissionRuleFactory</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 获得所有数据权限规则数组
     *
     * <span class="token keyword">@return</span> 数据权限规则数组
     */</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataPermissionRule</span><span class="token punctuation">&gt;</span></span> <span class="token function">getDataPermissionRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 获得指定 Mapper 的数据权限规则数组
     *
     * <span class="token keyword">@param</span> <span class="token parameter">mappedStatementId</span> 指定 Mapper 的编号
     * <span class="token keyword">@return</span> 数据权限规则数组
     */</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataPermissionRule</span><span class="token punctuation">&gt;</span></span> <span class="token function">getDataPermissionRule</span><span class="token punctuation">(</span><span class="token class-name">String</span> mappedStatementId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认实现 DataPermissionRuleFactoryImpl</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 默认的 DataPermissionRuleFactory 实现类
 * 支持通过 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">DataPermissionContextHolder</span></span><span class="token punctuation">}</span> 过滤数据权限
 * 
 * <span class="token keyword">@author</span> zjh - kayson
 */</span>
<span class="token annotation punctuation">@RequiredArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataPermissionRuleFactoryImpl</span> <span class="token keyword">implements</span> <span class="token class-name">DataPermissionRuleFactory</span> <span class="token punctuation">{</span>
    
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataPermissionRule</span><span class="token punctuation">&gt;</span></span> rules<span class="token punctuation">;</span> 
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataPermissionRule</span><span class="token punctuation">&gt;</span></span> <span class="token function">getDataPermissionRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> rules<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span> <span class="token comment">// mappedStatementId 参数，暂时没有用。以后，可以基于 mappedStatementId + DataPermission 进行缓存</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataPermissionRule</span><span class="token punctuation">&gt;</span></span> <span class="token function">getDataPermissionRule</span><span class="token punctuation">(</span><span class="token class-name">String</span> mappedStatementId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1 未配置数据权限规则，无数据权限</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>rules<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 2 未配置 DataPermission 注解，默认开启</span>
        <span class="token class-name">DataPermission</span> dataPermission <span class="token operator">=</span> <span class="token class-name">DataPermissionContextHolder</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>dataPermission <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> rules<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 3 已配置 DataPermission 注解，但禁用了，无数据权限</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dataPermission<span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 4 已配置 DataPermission 注解，只选择部分规则</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>dataPermission<span class="token punctuation">.</span><span class="token function">includeRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> rules<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>rule <span class="token operator">-&gt;</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>dataPermission<span class="token punctuation">.</span><span class="token function">includeRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rule<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 5 已配置 DataPermission 注解，只排除部分规则</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>dataPermission<span class="token punctuation">.</span><span class="token function">excludeRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> rules<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>rule <span class="token operator">-&gt;</span> <span class="token operator">!</span><span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>dataPermission<span class="token punctuation">.</span><span class="token function">excludeRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rule<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 6 已配置，全部规则</span>
        <span class="token keyword">return</span> rules<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-3与-datapermissiondatabaseinterceptor-的集成" tabindex="-1"><a class="header-anchor" href="#_2-3-3与-datapermissiondatabaseinterceptor-的集成" aria-hidden="true">#</a> 2.3.3与 DataPermissionDatabaseInterceptor 的集成</h4>`,11),h={href:"https://gitee.com/jhzhou/kayson/blob/master/kayson-framework/kayson-spring-boot-starter-biz-data-permission/src/main/java/cn/zjh/kayson/framework/datapermission/core/db/DataPermissionDatabaseInterceptor.java",target:"_blank",rel:"noopener noreferrer"},y=t(`<p>① 获得数据规则：DataPermissionRuleFactory 的 getDataPermissionRule</p><p>② 判断是否重写：使用 MappedStatementCache 缓存加速</p><p>③ 传递数据规则：DataPermissionRuleContextHolder 上下文</p><p>④ 生成 WHERE 数据权限条件：buildDataPermissionExpression</p><p>⑤ 拼接 WHERE 条件：builderExpression</p><h4 id="_2-3-4-datapermission注解" tabindex="-1"><a class="header-anchor" href="#_2-3-4-datapermission注解" aria-hidden="true">#</a> 2.3.4@DataPermission注解</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 数据权限注解
 * 可声明在类或者方法上，标识使用的数据权限规则
 * 
 * <span class="token keyword">@author</span> zjh - kayson
 */</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Documented</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">DataPermission</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 当前类或方法是否开启数据权限
     * 即使不添加 @DataPermission 注解，默认是开启状态
     * 可通过设置 enable 为 false 禁用
     */</span>
    <span class="token keyword">boolean</span> <span class="token function">enable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 生效的数据权限规则数组，优先级高于 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">excludeRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>
     */</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">DataPermissionRule</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">includeRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 排除的数据权限规则数组，优先级最低
     */</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">DataPermissionRule</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">excludeRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>① <code>enable</code> 属性：当前类或方法是否开启数据权限，默认是 <code>true</code> 开启状态，可设置 <code>false</code> 禁用状态。</p><p><strong>也就是说，数据权限默认是开启的，无需添加 <code>@DataPermission</code> 注解</strong><strong>也就是说，数据权限默认是开启的，无需添加 <code>@DataPermission</code> 注解</strong><strong>也就是说，数据权限默认是开启的，无需添加 <code>@DataPermission</code> 注解</strong></p><p>② <code>includeRules</code> 属性，配置生效的 DataPermissionRule 数据权限规则。</p><p>例如说，项目里有 10 种 DataPermissionRule 规则，某个方法<strong>只想</strong>其中的 1 种生效，则可以使用该属性。</p><p>③ <code>excludeRules</code> 属性，配置排除的 DataPermissionRule 数据权限规则。</p><p>例如说，项目里有 10 种 DataPermissionRule 规则，某个方法<strong>不想</strong>其中的 1 种生效，则可以使用该属性。</p><p>@DataPermission的AOP实现：</p>`,14),f={href:"https://gitee.com/jhzhou/kayson/blob/master/kayson-framework/kayson-spring-boot-starter-biz-data-permission/src/main/java/cn/zjh/kayson/framework/datapermission/core/aop/DataPermissionContextHolder.java",target:"_blank",rel:"noopener noreferrer"},g={href:"https://gitee.com/jhzhou/kayson/blob/master/kayson-framework/kayson-spring-boot-starter-biz-data-permission/src/main/java/cn/zjh/kayson/framework/datapermission/core/aop/DataPermissionAnnotationInterceptor.java",target:"_blank",rel:"noopener noreferrer"},_={href:"https://gitee.com/jhzhou/kayson/blob/master/kayson-framework/kayson-spring-boot-starter-biz-data-permission/src/main/java/cn/zjh/kayson/framework/datapermission/core/aop/DataPermissionAnnotationAdvisor.java",target:"_blank",rel:"noopener noreferrer"},D=n("h2",{id:"_3-如何实现【部门级别】的数据权限",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-如何实现【部门级别】的数据权限","aria-hidden":"true"},"#"),s(" 3.如何实现【部门级别】的数据权限")],-1),P={href:"https://gitee.com/jhzhou/kayson/blob/master/kayson-framework/kayson-spring-boot-starter-biz-data-permission/src/main/java/cn/zjh/kayson/framework/datapermission/core/rule/dept/DeptDataPermissionRule.java",target:"_blank",rel:"noopener noreferrer"},R=t(`<p>2、自定义表配置：DeptDataPermissionRuleCustomizer</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">DeptDataPermissionRule</span></span><span class="token punctuation">}</span> 的自定义配置接口
 * 
 * <span class="token keyword">@author</span> zjh - kayson
 */</span>
<span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DeptDataPermissionRuleCustomizer</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 自定义该权限规则
     * 1. 调用 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">DeptDataPermissionRule</span><span class="token punctuation">#</span><span class="token function">addDeptColumn</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> 方法，配置基于 dept_id 的过滤规则
     * 2. 调用 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">DeptDataPermissionRule</span><span class="token punctuation">#</span><span class="token function">addUserColumn</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> 方法，配置基于 user_id 的过滤规则
     *
     * <span class="token keyword">@param</span> <span class="token parameter">rule</span> 权限规则
     */</span>
    <span class="token keyword">void</span> <span class="token function">customize</span><span class="token punctuation">(</span><span class="token class-name">DeptDataPermissionRule</span> rule<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),w={href:"https://gitee.com/jhzhou/kayson/blob/master/kayson-module-system/kayson-module-system-biz/src/main/java/cn/zjh/kayson/module/system/service/permission/PermissionServiceImpl.java",target:"_blank",rel:"noopener noreferrer"},E=n("code",null,"#getDeptDataPermission(...)",-1),j=n("h3",{id:"_3-1部门权限范围",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-1部门权限范围","aria-hidden":"true"},"#"),s(" 3.1部门权限范围")],-1),x={href:"https://gitee.com/jhzhou/kayson/blob/master/kayson-module-system/kayson-module-system-api/src/main/java/cn/zjh/kayson/module/system/enums/permission/DataScopeEnum.java",target:"_blank",rel:"noopener noreferrer"},S=n("ul",null,[n("li",null,"【全部】：全部数据权限"),n("li",null,[s("【部门】： "),n("ul",null,[n("li",null,"指定部门数据权限"),n("li",null,"本部门数据权限"),n("li",null,"本部门及以下数据权限")])]),n("li",null,"【用户】：仅本人数据权限")],-1),z=n("h3",{id:"总结-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#总结-1","aria-hidden":"true"},"#"),s(" 总结")],-1),C={href:"https://gitee.com/jhzhou/kayson/blob/master/kayson-framework/kayson-spring-boot-starter-biz-data-permission/src/main/java/cn/zjh/kayson/framework/datapermission/core/rule/dept/DeptDataPermissionRule.java",target:"_blank",rel:"noopener noreferrer"},I=t('<ul><li>通过 DeptDataPermissionRuleCustomizer 进行配置：deptColumns，userColumns <ul><li>addDeptColumn：基于【部门】过滤数据权限的表，例如说：dept_id</li><li>addUserColumn：基于【用户】过滤数据权限的表，例如说：user_id</li></ul></li><li>getExpression 逻辑 <ul><li>第一步，获取当前用户</li><li>第二步，调用 PermissionApi 的 getDeptDataPermission 方法，获取数据权限范围（all、self、deptIds）</li><li>第三步，生成 dept 或 user 的 WHERE 条件，并返回</li></ul></li></ul><h2 id="_4-如何实现【自定义】的数据权限" tabindex="-1"><a class="header-anchor" href="#_4-如何实现【自定义】的数据权限" aria-hidden="true">#</a> 4.如何实现【自定义】的数据权限</h2><p>场景：</p><p>1、CRM 客户管理系统</p><ul><li>自己创建的客户，只能被自己看到</li><li>上级可以看到下属的客户</li></ul><p>2、OA 系统</p><ul><li>自己发起的流程（请假），只能被自己看到</li><li>可以看到所有的流程</li></ul>',7),L={href:"https://gitee.com/jhzhou/kayson/blob/master/kayson-framework/kayson-spring-boot-starter-biz-data-permission/src/main/java/cn/zjh/kayson/framework/datapermission/core/rule/dept/DeptDataPermissionRule.java",target:"_blank",rel:"noopener noreferrer"};function H(M,T){const a=p("ExternalLinkIcon");return i(),l("div",null,[r,n("p",null,[s("因此，项目提供 "),n("a",u,[s("kayson-spring-boot-starter-biz-data-permission"),e(a)]),s(" 技术组件，只需要少量的编码，无需入侵到业务代码，即可实现数据权限。")]),d,n("p",null,[s("明白了实现原理之后，想要进一步加入理解，后续可以找时间 Debug 调试下 "),n("a",k,[s("DataPermissionDatabaseInterceptor"),e(a)]),s(" 类的这三个方法：")]),m,n("p",null,[s("数据权限具体实现见 "),n("a",v,[s("DataPermissionDatabaseInterceptor"),e(a)]),s(" 类。")]),b,n("p",null,[n("a",h,[s("DataPermissionDatabaseInterceptor"),e(a)])]),y,n("ol",null,[n("li",null,[n("p",null,[s("上下文："),n("a",f,[s("DataPermissionContextHolder"),e(a)])])]),n("li",null,[n("p",null,[s("通知："),n("a",g,[s("DataPermissionAnnotationInterceptor"),e(a)])])]),n("li",null,[n("p",null,[s("顾问(通知 + 切入点)："),n("a",_,[s("DataPermissionAnnotationAdvisor"),e(a)])])])]),D,n("p",null,[s("1、定义部门级别的数据权限规则 "),n("a",P,[s("DeptDataPermissionRule"),e(a)])]),R,n("p",null,[s("3、获得数据范围：PermissionApi 的 getDeptDataPermission 方法，最终调用 "),n("a",w,[s("PermissionService"),e(a)]),s(" 的 "),E]),j,n("p",null,[s("通过 "),n("a",x,[s("DataScopeEnum"),e(a)]),s(" 枚举类指定：")]),S,z,n("p",null,[n("a",C,[s("DeptDataPermissionRule"),e(a)]),s("部门数据权限规则：")]),I,n("p",null,[s("实现：创建 DataPermissionRule 实现类，注册为 Spring Bean 即可（可参考 "),n("a",L,[s("DeptDataPermissionRule"),e(a)]),s("实现）")])])}const W=o(c,[["render",H],["__file","数据权限.html.vue"]]);export{W as default};
